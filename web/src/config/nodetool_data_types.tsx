import type { DataType } from "./data_types";

/**
 * NODETOOL built‑in data types (non‑Comfy) with categories.
 * Colors are generated elsewhere via OKLCH generator and overrides.
 */
export const NODETOOL_DATA_TYPES: DataType[] = [
  {
    value: "any",
    label: "Any",
    description: "Nodes using the TypeScript 'any' datatype",
    category: "execution",
    color: "",
    textColor: "dark",
    name: "",
    slug: "",
    namespace: "",
    icon: "QuestionMark"
  },
  {
    value: "notype",
    label: "No Type",
    description: "No output type",
    category: "execution",
    color: "",
    textColor: "dark",
    name: "",
    slug: "",
    namespace: "",
    icon: "NotType"
  },
  {
    value: "asset",
    label: "Asset",
    description: "Media files or documents",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "DataObject"
  },
  {
    value: "audio",
    label: "Audio",
    description: "Audio data",
    category: "audio",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Audiotrack"
  },
  {
    value: "video",
    label: "Video",
    description: "Video data",
    category: "texture",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Videocam"
  },
  {
    value: "bool",
    label: "Boolean",
    description: "True or false values",
    category: "boolean",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "CheckBoxOutlineBlank"
  },
  {
    value: "chunk",
    label: "Chunk",
    description: "A chunk of data from a chat message stream",
    category: "collection",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Message"
  },
  {
    value: "dataframe",
    label: "Dataframe",
    description: "Structured data in a tabular format",
    category: "collection",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "TableChart"
  },
  {
    value: "dict",
    label: "Dictionary",
    description: "Key‑Value pairs collection",
    category: "collection",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "List"
  },
  {
    value: "enum",
    label: "Enumeration",
    description: "A set of named constants",
    category: "collection",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "ShortText"
  },
  {
    value: "file",
    label: "File",
    description: "Uploaded files",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "InsertDriveFile"
  },
  {
    value: "float",
    label: "Float",
    description: "Real numbers with fractional parts",
    category: "scalar",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Numbers"
  },
  {
    value: "folder",
    label: "Folder",
    description: "Refers to a folder from the asset library",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Folder"
  },
  {
    value: "image",
    label: "Image",
    description: "Image data",
    category: "texture",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Image"
  },
  {
    value: "int",
    label: "Integer",
    description: "Whole numbers",
    category: "scalar",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Numbers"
  },
  {
    value: "list",
    label: "List",
    description: "An ordered collection of items",
    category: "collection",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "List"
  },
  {
    value: "str",
    label: "String",
    description: "A sequence of characters",
    category: "textual",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Abc"
  },
  {
    value: "tensor",
    label: "Tensor",
    description: "Multi‑dimensional arrays",
    category: "matrix",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "DataObject"
  },
  {
    value: "text",
    label: "Text",
    description: "Used for longer blocks of textual data",
    category: "textual",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "TextSnippet"
  },
  {
    value: "union",
    label: "Union",
    description: "Represents a value that could be one of several types",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "MergeType"
  },
  {
    value: "language_model",
    label: "Language Model",
    description: "Language model",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "ModelTraining"
  },
  {
    value: "message",
    label: "Message",
    description: "A Chat Message",
    category: "textual",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Message"
  },
  {
    value: "taesd",
    label: "TAESD",
    description: "Tiny Autoencoder",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "ModelTraining"
  },
  {
    value: "database",
    label: "Database",
    description: "Database",
    category: "reference",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Database"
  },
  {
    value: "task",
    label: "Task",
    description: "Used for agent tasks",
    category: "event",
    color: "",
    textColor: "var(--palette-action-active)",
    name: "",
    slug: "",
    namespace: "",
    icon: "Task"
  }
];
