/* TOOLTIP */
.MuiTooltip-popper {
  background: transparent;
  pointer-events: none !important;
  z-index: 99990 !important;
  border-radius: 0;
}

.MuiTooltip-popper .MuiTooltip-tooltip {
  padding: 0.5em 0.75em;
  background: var(--palette-grey-900);
  color: var(--palette-grey-100);
  font-size: var(--fontSizeSmall);
  box-shadow: none !important;
  max-width: 250px;
}

/* Lower opacity specifically for handle tooltips if they use MUI Tooltip API */
.MuiTooltip-popper .MuiTooltip-tooltip.tooltip-handle,
.MuiTooltip-popper .tooltip-handle {
  opacity: 0.85;
}

.MuiTooltip-tooltipPlacementLeft {
  margin-right: 50px !important;
  transform: translateX(30px) !important;
}

.MuiTooltip-tooltipPlacementRight {
  margin-left: 40px !important;
  transform: translateX(-30px);
}
.MuiTooltip-tooltipPlacementTop {
  margin-bottom: 0.5em !important;
  max-width: 300px !important;
  margin-left: -0.2em !important;
  padding: 0.6em 0.75em !important;
  box-shadow: 2px 2px 6px white !important;
}

.MuiTooltip-tooltipPlacementLeft span {
  border-radius: 4px 0 0 4px;
  padding-right: 8px;
}

.MuiTooltip-tooltipPlacementRight span {
  border-radius: 0 4px 4px 0;
  padding-left: 8px;
}

/* HANDLE TOOLTIP */
/* input and output handles */
.tooltip-handle {
  background-color: transparent !important;
}
.tooltip-handle span {
  padding: 0.1em 0.5em;
  color: var(--palette-grey-1000);
}

/* CONNECTABLE  */
.react-flow.is-connecting .react-flow__node .react-flow__handle {
  cursor: none !important;
}

.react-flow.is-connecting .react-flow__node .react-flow__handle.is-connectable {
  transform: translate(0, -50%) scale(1.1, 1);
  opacity: 1;
}

.react-flow.is-connecting
  .react-flow__node
  .react-flow__handle.not-connectable {
  opacity: 0.8;
  transform: translate(0, -50%) scale(0.6, 0.4);
}

/* IS CONNECTING */
.connecting-class {
  background-color: red !important;
}

/* edge */
.react-flow__edge-path,
.react-flow__connection-path {
  stroke: var(--palette-grey-400);
  stroke-width: 3 !important;
}

/* Connection (temporary line while dragging) opacity */
.react-flow__connection .react-flow__connection-path {
  opacity: 0.7;
  transition: opacity 150ms ease-in-out;
}

/* Make it a bit more visible only while actively connecting */
.react-flow.is-connecting .react-flow__connection .react-flow__connection-path {
  opacity: 1;
}

/* Dim static edges by default */
.react-flow__edges .react-flow__edge .react-flow__edge-path {
  opacity: 0.45;
  transition: opacity 150ms ease-in-out;
}

/* Highlight on hover */
.react-flow .react-flow__edge.hovered .react-flow__edge-path {
  opacity: 0.9;
}

/* Keep selected edges fully visible */
.react-flow .react-flow__edges .react-flow__edge.selected .react-flow__edge-path {
  opacity: 1;
}

/* While connecting, dim all static edges further to make the in-progress line pop */
.react-flow.is-connecting .react-flow__edges .react-flow__edge .react-flow__edge-path {
  opacity: 0.25;
}

/* edge hover */
.react-flow .react-flow__edge.hovered .react-flow__edge-path,
.react-flow .react-flow__edge.hovered .react-flow__connection-path {
  stroke-width: 3.5 !important;
  filter: drop-shadow(0 0 1px var(--palette-grey-400));
  filter: saturate(1.1) brightness(1.1);
}

/* edge selected */
.react-flow
  .react-flow__edges
  .react-flow__edge.selected
  .react-flow__edge-path {
  stroke-dasharray: 6;
  stroke-width: 5;
}

/* zoomed out */
.zoomed-out .react-flow__edge .react-flow__edge-path,
.zoomed-out .react-flow__connection .react-flow__connection-path {
  stroke: var(--palette-grey-400);
  stroke-width: 6 !important;
}

.react-flow__edge .react-flow__edge-text {
  visibility: visible !important;
  fill: #000;
  font-size: var(--fontSizeTinyer);
  transition: all 0.8s;
}

/* HANDLE */
.react-flow__node .react-flow__handle {
  transform: translate(0, -50%) scale(1, 1);
  transform-origin: right center;
  transition: transform 0.1s, height 0.05s, opacity 0.2s linear;
  width: var(--handle_width);
  height: var(--handle_height);
  /* Subtle, darker base so it doesn't pop over glass */
  background-color: var(--palette-grey-900);
  border: 0;
  z-index: 999;
  /* Softer shadow to reduce visual prominence */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.25);
  opacity: 0.6;
}
.react-flow__node .react-flow__handle-left {
  transform-origin: right center;
  left: -6px;
  top: 5px;
  border-left: 1px solid var(--palette-grey-700);
  border-top: 1px solid var(--palette-grey-700);
  border-bottom: 1px solid var(--palette-grey-700);
  border-radius: 2px 0 0 2px;
}
.react-flow__node .react-flow__handle-right {
  transform-origin: left center;
  border-right: 1px solid var(--palette-grey-700);
  border-top: 1px solid var(--palette-grey-700);
  border-bottom: 1px solid var(--palette-grey-700);
  right: -6px;
  border-radius: 0 2px 2px 0;
}

/* multiple outputs */
.multi-outputs .react-flow__handle-right {
  top: 6px;
}

ul.multi-outputs {
  position: relative;
  padding: 0;
  margin: 0.5em 0 0;
  width: 100%;
}
ul.multi-outputs li {
  position: relative;
  padding: 0 0.75em 0.75em 0;
  /* color: var(--palette-grey-200); */
  text-transform: capitalize;
  text-align: right;
}

ul.multi-outputs li p {
  font-size: var(--fontSizeSmaller);
}

ul.multi-outputs li::marker {
  content: "" !important;
}

/* handle hover */
.react-flow__node .react-flow__handle-left:hover {
  transform: translate(0, -50%) scale(1.25, 1);
  cursor: cell;
  opacity: 0.9;
}
.react-flow__node .react-flow__handle-right:hover {
  transform: translate(0, -50%) scale(1.25, 1);
  cursor: cell;
  opacity: 0.9;
}
.react-flow__node .react-flow__handle-left::after,
.react-flow__node .react-flow__handle-right::after {
  content: "";
  position: absolute;
  left: -5px;
  background-color: transparent;
  width: 17px;
  height: 100%;
}
.react-flow__node .react-flow__handle-right::after {
  left: unset;
  right: -5px;
  border-radius: 0px;
}
.react-flow.is-connecting .react-flow__node .react-flow__handle-right::after,
.react-flow.is-connecting .react-flow__node .react-flow__handle-left::after {
  display: none;
}
.react-flow.is-connecting .react-flow__node .react-flow__handle-right,
.react-flow.is-connecting .react-flow__node .react-flow__handle-left {
  pointer-events: none;
}

/* node menu outputs */
.dndnode .output-info:after {
  content: "";
  position: absolute;
  top: 5px;
  right: 0;
  width: 15px;
  height: 15px;
  border: 1px solid var(--palette-grey-600);
}

.handle-tooltip-wrapper {
  /* position: relative; */
  padding: 0;
}

.handle-tooltip {
  position: fixed;
  transform: translateX(-100%);
  opacity: 0;
  pointer-events: none;
  transition: opacity 100ms ease-in-out, visibility 0ms linear 150ms;
}

/* Debug - add direct hover first */
.handle-tooltip-wrapper:hover ~ .handle-tooltip {
  opacity: 0.85 !important;
  visibility: visible !important;
}

/* Original hover */
.handle-tooltip-wrapper:hover + .tooltip-container .handle-tooltip {
  opacity: 0.85;
  visibility: visible;
  transition: opacity 100ms ease-in-out 100ms, visibility 0ms linear;
}
