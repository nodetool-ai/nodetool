name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  pypi-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg
        with:
          # ffmpeg-version: release
          ffmpeg-version: "6.1.0" # Pinning a specific version to avoid fetch failures

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build
        run: poetry build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  release-build:
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: windows
            arch: x64

    runs-on: ${{ matrix.os }}

    env:
      PYTHON_VERSION: "3.11.10"
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ env.PYTHON_VERSION }}

      # - name: Import Code Signing Certificate
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     echo "${{ secrets.WIN_CSC_CERT }}" > certificate.b64
      #     certutil -decode certificate.b64 certificate.pfx
      #   env:
      #     WIN_CSC_CERT: ${{ secrets.WIN_CSC_CERT }}

      - name: Build Web
        shell: bash -l {0}
        run: |
          python build.py --step web --python-version ${{ env.PYTHON_VERSION }}

      - name: Build and Publish Electron
        shell: bash -l {0}
        env:
          # CSC_LINK: ./certificate.pfx
          # CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder
        run: |
          python build.py --step electron --python-version ${{ env.PYTHON_VERSION }}
