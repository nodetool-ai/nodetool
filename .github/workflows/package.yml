name: Package and Release

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          # - os: ubuntu-latest
          #   platform: linux
          #   arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64

    runs-on: ${{ matrix.os }}

    env:
      PYTHON_VERSION: "3.11.10"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up build tools
        shell: bash -l {0}
        run: |
          python build.py --step setup --python-version ${{ env.PYTHON_VERSION }}

      - name: Package python
        shell: bash -l {0}
        run: |
          python build.py --step python --python-version ${{ env.PYTHON_VERSION }}

      - name: Package ffmpeg
        shell: bash -l {0}
        run: |
          python build.py --step ffmpeg --python-version ${{ env.PYTHON_VERSION }}

      - name: Package ollama
        shell: bash -l {0}
        run: |
          python build.py --step ollama --python-version ${{ env.PYTHON_VERSION }}

      - name: Package react
        shell: bash -l {0}
        run: |
          python build.py --step react --python-version ${{ env.PYTHON_VERSION }}

      - name: Package electron
        shell: bash -l {0}
        run: |
          python build.py --step electron --python-version ${{ env.PYTHON_VERSION }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            build/*.zip
            build/*.sha256
            build/**/*.exe
            build/**/*.dmg

  upload_assets:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: build

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/*.zip
            **/*.exe
            **/*.dmg
            **/*.sha256
