name: Package and Release

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          # - os: ubuntu-latest
          #   platform: linux
          #   arch: x64
          - os: macos-latest
            platform: mac
            arch: arm64
          - os: windows-latest
            platform: win
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: "3.11"

      - name: Set up build tools
        shell: bash -l {0}
        run: |
          python build.py --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} --step setup

      - name: Package python
        shell: bash -l {0}
        run: |
          python build.py --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} --step python

      - name: Package react
        shell: bash -l {0}
        run: |
          python build.py --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} --step react

      - name: Package electron
        shell: bash -l {0}
        run: |
          python build.py --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} --step electron

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            build/*.tar
            build/*.exe
            build/*.dmg
            build/*.zip

  upload_assets:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: build

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          asset_path: ./build/**/*
          asset_name: ${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.asset }}
          asset_content_type: application/octet-stream
