schema = {'info': {'title': 'Cog', 'version': '0.1.0'}, 'paths': {'/': {'get': {'summary': 'Root', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Root  Get'}}}, 'description': 'Successful Response'}}, 'operationId': 'root__get'}}, '/shutdown': {'post': {'summary': 'Start Shutdown', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Start Shutdown Shutdown Post'}}}, 'description': 'Successful Response'}}, 'operationId': 'start_shutdown_shutdown_post'}}, '/predictions': {'post': {'summary': 'Predict', 'responses': {'200': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictionResponse'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'parameters': [{'in': 'header', 'name': 'prefer', 'schema': {'type': 'string', 'title': 'Prefer'}, 'required': False}], 'description': 'Run a single prediction on the model', 'operationId': 'predict_predictions_post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictionRequest'}}}}}}, '/health-check': {'get': {'summary': 'Healthcheck', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Healthcheck Health Check Get'}}}, 'description': 'Successful Response'}}, 'operationId': 'healthcheck_health_check_get'}}, '/predictions/{prediction_id}': {'put': {'summary': 'Predict Idempotent', 'responses': {'200': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictionResponse'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'parameters': [{'in': 'path', 'name': 'prediction_id', 'schema': {'type': 'string', 'title': 'Prediction ID'}, 'required': True}, {'in': 'header', 'name': 'prefer', 'schema': {'type': 'string', 'title': 'Prefer'}, 'required': False}], 'description': 'Run a single prediction on the model (idempotent creation).', 'operationId': 'predict_idempotent_predictions__prediction_id__put', 'requestBody': {'content': {'application/json': {'schema': {'allOf': [{'$ref': '#/components/schemas/PredictionRequest'}], 'title': 'Prediction Request'}}}, 'required': True}}}, '/predictions/{prediction_id}/cancel': {'post': {'summary': 'Cancel', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Cancel Predictions  Prediction Id  Cancel Post'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'parameters': [{'in': 'path', 'name': 'prediction_id', 'schema': {'type': 'string', 'title': 'Prediction ID'}, 'required': True}], 'description': 'Cancel a running prediction', 'operationId': 'cancel_predictions__prediction_id__cancel_post'}}}, 'openapi': '3.1.0', 'components': {'schemas': {'Input': {'type': 'object', 'title': 'Input', 'required': ['image', 'prompt', 'structure'], 'properties': {'eta': {'type': 'number', 'title': 'Eta', 'default': 0, 'x-order': 9, 'description': 'Controls the amount of noise that is added to the input data during the denoising diffusion process. Higher value -> more noise'}, 'seed': {'type': 'integer', 'title': 'Seed', 'x-order': 8, 'description': 'Seed'}, 'image': {'type': 'string', 'title': 'Image', 'format': 'uri', 'x-order': 0, 'description': 'Input image'}, 'scale': {'type': 'number', 'title': 'Scale', 'default': 9, 'maximum': 30, 'minimum': 0.1, 'x-order': 7, 'description': 'Scale for classifier-free guidance'}, 'steps': {'type': 'integer', 'title': 'Steps', 'default': 20, 'x-order': 6, 'description': 'Steps'}, 'prompt': {'type': 'string', 'title': 'Prompt', 'x-order': 1, 'description': 'Prompt for the model'}, 'scheduler': {'allOf': [{'$ref': '#/components/schemas/scheduler'}], 'default': 'DDIM', 'x-order': 5, 'description': 'Choose a scheduler.'}, 'structure': {'allOf': [{'$ref': '#/components/schemas/structure'}], 'x-order': 2, 'description': 'Controlnet structure to condition on'}, 'num_outputs': {'type': 'integer', 'title': 'Num Outputs', 'default': 1, 'maximum': 4, 'minimum': 1, 'x-order': 3, 'description': 'Number of images to output (higher values may OOM)'}, 'low_threshold': {'type': 'integer', 'title': 'Low Threshold', 'default': 100, 'maximum': 255, 'minimum': 1, 'x-order': 12, 'description': '[canny only] Line detection low threshold'}, 'high_threshold': {'type': 'integer', 'title': 'High Threshold', 'default': 200, 'maximum': 255, 'minimum': 1, 'x-order': 13, 'description': '[canny only] Line detection high threshold'}, 'negative_prompt': {'type': 'string', 'title': 'Negative Prompt', 'default': 'Longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality', 'x-order': 10, 'description': 'Negative prompt'}, 'image_resolution': {'allOf': [{'$ref': '#/components/schemas/image_resolution'}], 'default': 512, 'x-order': 4, 'description': 'Resolution of output image (will be scaled to this as its smaller dimension)'}, 'return_reference_image': {'type': 'boolean', 'title': 'Return Reference Image', 'default': False, 'x-order': 11, 'description': 'whether to return the reference image along with the output'}}}, 'Output': {'type': 'array', 'items': {'type': 'string', 'format': 'uri'}, 'title': 'Output'}, 'Status': {'enum': ['starting', 'processing', 'succeeded', 'canceled', 'failed'], 'type': 'string', 'title': 'Status', 'description': 'An enumeration.'}, 'scheduler': {'enum': ['DDIM', 'DPMSolverMultistep', 'HeunDiscrete', 'K_EULER_ANCESTRAL', 'K_EULER', 'KLMS', 'PNDM', 'UniPCMultistep'], 'type': 'string', 'title': 'scheduler', 'description': 'An enumeration.'}, 'structure': {'enum': ['canny', 'depth', 'hed', 'hough', 'normal', 'pose', 'scribble', 'seg'], 'type': 'string', 'title': 'structure', 'description': 'An enumeration.'}, 'WebhookEvent': {'enum': ['start', 'output', 'logs', 'completed'], 'type': 'string', 'title': 'WebhookEvent', 'description': 'An enumeration.'}, 'ValidationError': {'type': 'object', 'title': 'ValidationError', 'required': ['loc', 'msg', 'type'], 'properties': {'loc': {'type': 'array', 'items': {'anyOf': [{'type': 'string'}, {'type': 'integer'}]}, 'title': 'Location'}, 'msg': {'type': 'string', 'title': 'Message'}, 'type': {'type': 'string', 'title': 'Error Type'}}}, 'image_resolution': {'enum': [256, 512, 768], 'type': 'integer', 'title': 'image_resolution', 'description': 'An enumeration.'}, 'PredictionRequest': {'type': 'object', 'title': 'PredictionRequest', 'properties': {'id': {'type': 'string', 'title': 'Id'}, 'input': {'$ref': '#/components/schemas/Input'}, 'webhook': {'type': 'string', 'title': 'Webhook', 'format': 'uri', 'maxLength': 65536, 'minLength': 1}, 'created_at': {'type': 'string', 'title': 'Created At', 'format': 'date-time'}, 'output_file_prefix': {'type': 'string', 'title': 'Output File Prefix'}, 'webhook_events_filter': {'type': 'array', 'items': {'$ref': '#/components/schemas/WebhookEvent'}, 'default': ['start', 'output', 'logs', 'completed'], 'uniqueItems': True}}}, 'PredictionResponse': {'type': 'object', 'title': 'PredictionResponse', 'properties': {'id': {'type': 'string', 'title': 'Id'}, 'logs': {'type': 'string', 'title': 'Logs', 'default': ''}, 'error': {'type': 'string', 'title': 'Error'}, 'input': {'$ref': '#/components/schemas/Input'}, 'output': {'$ref': '#/components/schemas/Output'}, 'status': {'$ref': '#/components/schemas/Status'}, 'metrics': {'type': 'object', 'title': 'Metrics'}, 'version': {'type': 'string', 'title': 'Version'}, 'created_at': {'type': 'string', 'title': 'Created At', 'format': 'date-time'}, 'started_at': {'type': 'string', 'title': 'Started At', 'format': 'date-time'}, 'completed_at': {'type': 'string', 'title': 'Completed At', 'format': 'date-time'}}}, 'HTTPValidationError': {'type': 'object', 'title': 'HTTPValidationError', 'properties': {'detail': {'type': 'array', 'items': {'$ref': '#/components/schemas/ValidationError'}, 'title': 'Detail'}}}}}}
model_id = 'rossjillian/controlnet'
model_version = '795433b19458d0f4fa172a7ccf93178d2adb1cb8ab2ad6c8fdc33fdbcd49f477'
model_info = {'cover_image_url': 'https://replicate.delivery/pbxt/BKfYyssmWUUDWiukeXLAQc47KUPBwDMCdbxd8esqr3yE06eDB/out-0.png', 'created_at': '2023-03-27T18:34:30.868199Z', 'default_example': {'completed_at': '2023-05-26T03:16:19.677736Z', 'created_at': '2023-05-26T03:16:15.150008Z', 'error': None, 'id': '6fovuahuczeknb4rws5cqu4wc4', 'input': {'seed': 20, 'image': 'https://replicate.delivery/pbxt/IYQLHLFDraqCrjDUoiwpM9xBhQM1eQVHbxBiNxcbwctUamzb/user_1.png', 'scale': 9, 'steps': 20, 'prompt': 'a photo of a brightly colored turtle', 'a_prompt': 'Best quality, extremely detailed', 'n_prompt': 'Longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality', 'structure': 'scribble', 'num_samples': '1', 'low_threshold': 100, 'high_threshold': 200, 'image_resolution': '512'}, 'logs': 'Using seed: 20\n  0%|          | 0/20 [00:00<?, ?it/s]\n  5%|▌         | 1/20 [00:00<00:01,  9.69it/s]\n 10%|█         | 2/20 [00:00<00:01,  9.44it/s]\n 15%|█▌        | 3/20 [00:00<00:01,  9.48it/s]\n 20%|██        | 4/20 [00:00<00:01,  9.51it/s]\n 25%|██▌       | 5/20 [00:00<00:01,  9.59it/s]\n 30%|███       | 6/20 [00:00<00:01,  9.50it/s]\n 35%|███▌      | 7/20 [00:00<00:01,  9.44it/s]\n 40%|████      | 8/20 [00:00<00:01,  9.59it/s]\n 50%|█████     | 10/20 [00:01<00:01,  9.97it/s]\n 60%|██████    | 12/20 [00:01<00:00,  9.88it/s]\n 65%|██████▌   | 13/20 [00:01<00:00,  9.52it/s]\n 70%|███████   | 14/20 [00:01<00:00,  9.24it/s]\n 75%|███████▌  | 15/20 [00:01<00:00,  9.05it/s]\n 80%|████████  | 16/20 [00:01<00:00,  8.78it/s]\n 85%|████████▌ | 17/20 [00:01<00:00,  8.37it/s]\n 90%|█████████ | 18/20 [00:01<00:00,  8.09it/s]\n 95%|█████████▌| 19/20 [00:02<00:00,  8.22it/s]\n100%|██████████| 20/20 [00:02<00:00,  8.31it/s]\n100%|██████████| 20/20 [00:02<00:00,  9.03it/s]', 'metrics': {'predict_time': 3.971176, 'total_time': 4.527728}, 'output': ['https://replicate.delivery/pbxt/BKfYyssmWUUDWiukeXLAQc47KUPBwDMCdbxd8esqr3yE06eDB/out-0.png'], 'started_at': '2023-05-26T03:16:15.706560Z', 'status': 'succeeded', 'urls': {'get': 'https://api.replicate.com/v1/predictions/6fovuahuczeknb4rws5cqu4wc4', 'cancel': 'https://api.replicate.com/v1/predictions/6fovuahuczeknb4rws5cqu4wc4/cancel'}, 'model': 'rossjillian/controlnet', 'version': 'd55b9f2dcfb156089686b8f767776d5b61b007187a4e1e611881818098100fbb', 'webhook_completed': None}, 'description': 'Control diffusion models', 'github_url': 'https://github.com/replicate/cog-controlnet', 'latest_version': {'id': '795433b19458d0f4fa172a7ccf93178d2adb1cb8ab2ad6c8fdc33fdbcd49f477', 'created_at': '2023-07-01T23:57:04.081324Z', 'cog_version': '0.8.0-beta8', 'openapi_schema': {'info': {'title': 'Cog', 'version': '0.1.0'}, 'paths': {'/': {'get': {'summary': 'Root', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Root  Get'}}}, 'description': 'Successful Response'}}, 'operationId': 'root__get'}}, '/shutdown': {'post': {'summary': 'Start Shutdown', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Start Shutdown Shutdown Post'}}}, 'description': 'Successful Response'}}, 'operationId': 'start_shutdown_shutdown_post'}}, '/predictions': {'post': {'summary': 'Predict', 'responses': {'200': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictionResponse'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'parameters': [{'in': 'header', 'name': 'prefer', 'schema': {'type': 'string', 'title': 'Prefer'}, 'required': False}], 'description': 'Run a single prediction on the model', 'operationId': 'predict_predictions_post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictionRequest'}}}}}}, '/health-check': {'get': {'summary': 'Healthcheck', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Healthcheck Health Check Get'}}}, 'description': 'Successful Response'}}, 'operationId': 'healthcheck_health_check_get'}}, '/predictions/{prediction_id}': {'put': {'summary': 'Predict Idempotent', 'responses': {'200': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictionResponse'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'parameters': [{'in': 'path', 'name': 'prediction_id', 'schema': {'type': 'string', 'title': 'Prediction ID'}, 'required': True}, {'in': 'header', 'name': 'prefer', 'schema': {'type': 'string', 'title': 'Prefer'}, 'required': False}], 'description': 'Run a single prediction on the model (idempotent creation).', 'operationId': 'predict_idempotent_predictions__prediction_id__put', 'requestBody': {'content': {'application/json': {'schema': {'allOf': [{'$ref': '#/components/schemas/PredictionRequest'}], 'title': 'Prediction Request'}}}, 'required': True}}}, '/predictions/{prediction_id}/cancel': {'post': {'summary': 'Cancel', 'responses': {'200': {'content': {'application/json': {'schema': {'title': 'Response Cancel Predictions  Prediction Id  Cancel Post'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'parameters': [{'in': 'path', 'name': 'prediction_id', 'schema': {'type': 'string', 'title': 'Prediction ID'}, 'required': True}], 'description': 'Cancel a running prediction', 'operationId': 'cancel_predictions__prediction_id__cancel_post'}}}, 'openapi': '3.1.0', 'components': {'schemas': {'Input': {'type': 'object', 'title': 'Input', 'required': ['image', 'prompt', 'structure'], 'properties': {'eta': {'type': 'number', 'title': 'Eta', 'default': 0, 'x-order': 9, 'description': 'Controls the amount of noise that is added to the input data during the denoising diffusion process. Higher value -> more noise'}, 'seed': {'type': 'integer', 'title': 'Seed', 'x-order': 8, 'description': 'Seed'}, 'image': {'type': 'string', 'title': 'Image', 'format': 'uri', 'x-order': 0, 'description': 'Input image'}, 'scale': {'type': 'number', 'title': 'Scale', 'default': 9, 'maximum': 30, 'minimum': 0.1, 'x-order': 7, 'description': 'Scale for classifier-free guidance'}, 'steps': {'type': 'integer', 'title': 'Steps', 'default': 20, 'x-order': 6, 'description': 'Steps'}, 'prompt': {'type': 'string', 'title': 'Prompt', 'x-order': 1, 'description': 'Prompt for the model'}, 'scheduler': {'allOf': [{'$ref': '#/components/schemas/scheduler'}], 'default': 'DDIM', 'x-order': 5, 'description': 'Choose a scheduler.'}, 'structure': {'allOf': [{'$ref': '#/components/schemas/structure'}], 'x-order': 2, 'description': 'Controlnet structure to condition on'}, 'num_outputs': {'type': 'integer', 'title': 'Num Outputs', 'default': 1, 'maximum': 4, 'minimum': 1, 'x-order': 3, 'description': 'Number of images to output (higher values may OOM)'}, 'low_threshold': {'type': 'integer', 'title': 'Low Threshold', 'default': 100, 'maximum': 255, 'minimum': 1, 'x-order': 12, 'description': '[canny only] Line detection low threshold'}, 'high_threshold': {'type': 'integer', 'title': 'High Threshold', 'default': 200, 'maximum': 255, 'minimum': 1, 'x-order': 13, 'description': '[canny only] Line detection high threshold'}, 'negative_prompt': {'type': 'string', 'title': 'Negative Prompt', 'default': 'Longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality', 'x-order': 10, 'description': 'Negative prompt'}, 'image_resolution': {'allOf': [{'$ref': '#/components/schemas/image_resolution'}], 'default': 512, 'x-order': 4, 'description': 'Resolution of output image (will be scaled to this as its smaller dimension)'}, 'return_reference_image': {'type': 'boolean', 'title': 'Return Reference Image', 'default': False, 'x-order': 11, 'description': 'whether to return the reference image along with the output'}}}, 'Output': {'type': 'array', 'items': {'type': 'string', 'format': 'uri'}, 'title': 'Output'}, 'Status': {'enum': ['starting', 'processing', 'succeeded', 'canceled', 'failed'], 'type': 'string', 'title': 'Status', 'description': 'An enumeration.'}, 'scheduler': {'enum': ['DDIM', 'DPMSolverMultistep', 'HeunDiscrete', 'K_EULER_ANCESTRAL', 'K_EULER', 'KLMS', 'PNDM', 'UniPCMultistep'], 'type': 'string', 'title': 'scheduler', 'description': 'An enumeration.'}, 'structure': {'enum': ['canny', 'depth', 'hed', 'hough', 'normal', 'pose', 'scribble', 'seg'], 'type': 'string', 'title': 'structure', 'description': 'An enumeration.'}, 'WebhookEvent': {'enum': ['start', 'output', 'logs', 'completed'], 'type': 'string', 'title': 'WebhookEvent', 'description': 'An enumeration.'}, 'ValidationError': {'type': 'object', 'title': 'ValidationError', 'required': ['loc', 'msg', 'type'], 'properties': {'loc': {'type': 'array', 'items': {'anyOf': [{'type': 'string'}, {'type': 'integer'}]}, 'title': 'Location'}, 'msg': {'type': 'string', 'title': 'Message'}, 'type': {'type': 'string', 'title': 'Error Type'}}}, 'image_resolution': {'enum': [256, 512, 768], 'type': 'integer', 'title': 'image_resolution', 'description': 'An enumeration.'}, 'PredictionRequest': {'type': 'object', 'title': 'PredictionRequest', 'properties': {'id': {'type': 'string', 'title': 'Id'}, 'input': {'$ref': '#/components/schemas/Input'}, 'webhook': {'type': 'string', 'title': 'Webhook', 'format': 'uri', 'maxLength': 65536, 'minLength': 1}, 'created_at': {'type': 'string', 'title': 'Created At', 'format': 'date-time'}, 'output_file_prefix': {'type': 'string', 'title': 'Output File Prefix'}, 'webhook_events_filter': {'type': 'array', 'items': {'$ref': '#/components/schemas/WebhookEvent'}, 'default': ['start', 'output', 'logs', 'completed'], 'uniqueItems': True}}}, 'PredictionResponse': {'type': 'object', 'title': 'PredictionResponse', 'properties': {'id': {'type': 'string', 'title': 'Id'}, 'logs': {'type': 'string', 'title': 'Logs', 'default': ''}, 'error': {'type': 'string', 'title': 'Error'}, 'input': {'$ref': '#/components/schemas/Input'}, 'output': {'$ref': '#/components/schemas/Output'}, 'status': {'$ref': '#/components/schemas/Status'}, 'metrics': {'type': 'object', 'title': 'Metrics'}, 'version': {'type': 'string', 'title': 'Version'}, 'created_at': {'type': 'string', 'title': 'Created At', 'format': 'date-time'}, 'started_at': {'type': 'string', 'title': 'Started At', 'format': 'date-time'}, 'completed_at': {'type': 'string', 'title': 'Completed At', 'format': 'date-time'}}}, 'HTTPValidationError': {'type': 'object', 'title': 'HTTPValidationError', 'properties': {'detail': {'type': 'array', 'items': {'$ref': '#/components/schemas/ValidationError'}, 'title': 'Detail'}}}}}}}, 'license_url': 'https://github.com/lllyasviel/ControlNet/blob/main/LICENSE', 'name': 'controlnet', 'owner': 'rossjillian', 'paper_url': 'https://arxiv.org/abs/2302.05543', 'run_count': 7209170, 'url': 'https://replicate.com/rossjillian/controlnet', 'visibility': 'public', 'hardware': 'Nvidia A100 (40GB) GPU'}
