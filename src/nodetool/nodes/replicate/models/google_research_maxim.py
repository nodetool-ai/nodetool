schema = {'info': {'title': 'Cog', 'version': '0.1.0'}, 'paths': {'/': {'get': {'summary': 'Root', 'responses': {'200': {'content': {'application/json': {'schema': {}}}, 'description': 'Successful Response'}}, 'operationId': 'root__get'}}, '/predictions': {'post': {'summary': 'Predict', 'responses': {'200': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Response'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'description': 'Run a single prediction on the model', 'operationId': 'predict_predictions_post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Request'}}}}}}}, 'openapi': '3.0.2', 'components': {'schemas': {'Input': {'type': 'object', 'title': 'Input', 'required': ['model', 'image'], 'properties': {'image': {'type': 'string', 'title': 'Image', 'format': 'uri', 'x-order': 1, 'description': 'Input image.'}, 'model': {'allOf': [{'$ref': '#/components/schemas/model'}], 'x-order': 0, 'description': 'Choose a model.'}}}, 'model': {'enum': ['Image Denoising', 'Image Deblurring (GoPro)', 'Image Deblurring (REDS)', 'Image Deblurring (RealBlur_R)', 'Image Deblurring (RealBlur_J)', 'Image Deraining (Rain streak)', 'Image Deraining (Rain drop)', 'Image Dehazing (Indoor)', 'Image Dehazing (Outdoor)', 'Image Enhancement (Low-light)', 'Image Enhancement (Retouching)'], 'type': 'string', 'title': 'model', 'description': 'An enumeration.'}, 'Output': {'type': 'string', 'title': 'Output', 'format': 'uri'}, 'Status': {'enum': ['processing', 'success', 'failed'], 'type': 'string', 'title': 'Status', 'description': 'An enumeration.'}, 'Request': {'type': 'object', 'title': 'Request', 'properties': {'input': {'$ref': '#/components/schemas/Input'}, 'output_file_prefix': {'type': 'string', 'title': 'Output File Prefix'}}, 'description': 'The request body for a prediction'}, 'Response': {'type': 'object', 'title': 'Response', 'required': ['status'], 'properties': {'error': {'type': 'string', 'title': 'Error'}, 'output': {'$ref': '#/components/schemas/Output'}, 'status': {'$ref': '#/components/schemas/Status'}}, 'description': 'The response body for a prediction'}, 'ValidationError': {'type': 'object', 'title': 'ValidationError', 'required': ['loc', 'msg', 'type'], 'properties': {'loc': {'type': 'array', 'items': {'type': 'string'}, 'title': 'Location'}, 'msg': {'type': 'string', 'title': 'Message'}, 'type': {'type': 'string', 'title': 'Error Type'}}}, 'HTTPValidationError': {'type': 'object', 'title': 'HTTPValidationError', 'properties': {'detail': {'type': 'array', 'items': {'$ref': '#/components/schemas/ValidationError'}, 'title': 'Detail'}}}}}}
model_id = 'google-research/maxim'
model_version = '494ca4d578293b4b93945115601b6a38190519da18467556ca223d219c3af9f9'
model_info = {'cover_image_url': 'https://replicate.delivery/mgxm/716ffa94-41f7-46b4-a2f0-287f0e907f9c/output.png', 'created_at': '2022-04-20T16:32:30.049391Z', 'default_example': {'completed_at': '2022-04-23T08:37:29.298497Z', 'created_at': '2022-04-23T08:37:07.361202Z', 'error': None, 'id': 'de3zlvchsvdntdd4y2pk7eeu5y', 'input': {'image': 'https://replicate.delivery/mgxm/6707a57f-4957-4047-b020-2160aed1d27a/1fromGOPR0950.png', 'model': 'Image Deblurring (GoPro)'}, 'logs': None, 'metrics': {'predict_time': 21.753686, 'total_time': 21.937295}, 'output': 'https://replicate.delivery/mgxm/716ffa94-41f7-46b4-a2f0-287f0e907f9c/output.png', 'started_at': '2022-04-23T08:37:07.544811Z', 'status': 'succeeded', 'urls': {'get': 'https://api.replicate.com/v1/predictions/de3zlvchsvdntdd4y2pk7eeu5y', 'cancel': 'https://api.replicate.com/v1/predictions/de3zlvchsvdntdd4y2pk7eeu5y/cancel'}, 'model': 'google-research/maxim', 'version': 'a91063d0a4a6e6545980ce677b4a5bfbee686229307baed4e9b91f66dd0d749d', 'webhook_completed': None}, 'description': 'Multi-Axis MLP for Image Processing', 'github_url': 'https://github.com/google-research/maxim', 'latest_version': {'id': '494ca4d578293b4b93945115601b6a38190519da18467556ca223d219c3af9f9', 'created_at': '2022-04-23T08:38:19.696068Z', 'cog_version': '0.2.0', 'openapi_schema': {'info': {'title': 'Cog', 'version': '0.1.0'}, 'paths': {'/': {'get': {'summary': 'Root', 'responses': {'200': {'content': {'application/json': {'schema': {}}}, 'description': 'Successful Response'}}, 'operationId': 'root__get'}}, '/predictions': {'post': {'summary': 'Predict', 'responses': {'200': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Response'}}}, 'description': 'Successful Response'}, '422': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}, 'description': 'Validation Error'}}, 'description': 'Run a single prediction on the model', 'operationId': 'predict_predictions_post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Request'}}}}}}}, 'openapi': '3.0.2', 'components': {'schemas': {'Input': {'type': 'object', 'title': 'Input', 'required': ['model', 'image'], 'properties': {'image': {'type': 'string', 'title': 'Image', 'format': 'uri', 'x-order': 1, 'description': 'Input image.'}, 'model': {'allOf': [{'$ref': '#/components/schemas/model'}], 'x-order': 0, 'description': 'Choose a model.'}}}, 'model': {'enum': ['Image Denoising', 'Image Deblurring (GoPro)', 'Image Deblurring (REDS)', 'Image Deblurring (RealBlur_R)', 'Image Deblurring (RealBlur_J)', 'Image Deraining (Rain streak)', 'Image Deraining (Rain drop)', 'Image Dehazing (Indoor)', 'Image Dehazing (Outdoor)', 'Image Enhancement (Low-light)', 'Image Enhancement (Retouching)'], 'type': 'string', 'title': 'model', 'description': 'An enumeration.'}, 'Output': {'type': 'string', 'title': 'Output', 'format': 'uri'}, 'Status': {'enum': ['processing', 'success', 'failed'], 'type': 'string', 'title': 'Status', 'description': 'An enumeration.'}, 'Request': {'type': 'object', 'title': 'Request', 'properties': {'input': {'$ref': '#/components/schemas/Input'}, 'output_file_prefix': {'type': 'string', 'title': 'Output File Prefix'}}, 'description': 'The request body for a prediction'}, 'Response': {'type': 'object', 'title': 'Response', 'required': ['status'], 'properties': {'error': {'type': 'string', 'title': 'Error'}, 'output': {'$ref': '#/components/schemas/Output'}, 'status': {'$ref': '#/components/schemas/Status'}}, 'description': 'The response body for a prediction'}, 'ValidationError': {'type': 'object', 'title': 'ValidationError', 'required': ['loc', 'msg', 'type'], 'properties': {'loc': {'type': 'array', 'items': {'type': 'string'}, 'title': 'Location'}, 'msg': {'type': 'string', 'title': 'Message'}, 'type': {'type': 'string', 'title': 'Error Type'}}}, 'HTTPValidationError': {'type': 'object', 'title': 'HTTPValidationError', 'properties': {'detail': {'type': 'array', 'items': {'$ref': '#/components/schemas/ValidationError'}, 'title': 'Detail'}}}}}}}, 'license_url': 'https://github.com/google-research/maxim/blob/main/LICENSE', 'name': 'maxim', 'owner': 'google-research', 'paper_url': 'https://arxiv.org/abs/2201.02973', 'run_count': 397191, 'url': 'https://replicate.com/google-research/maxim', 'visibility': 'public', 'hardware': 'Nvidia T4 GPU'}
