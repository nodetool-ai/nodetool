services:
  api:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - "./key.pem:/app/key.pem"
      - "./cert.pem:/app/cert.pem"
      - ${HF_HOME:-./huggingface}:/app/huggingface
    command:
      [
        "uvicorn",
        "nodetool.api.app:app",
        "--host",
        "0.0.0.0",
        "--port",
        "443",
        "--ssl-keyfile",
        "/app/key.pem",
        "--ssl-certfile",
        "/app/cert.pem",
      ]
    ports:
      - "443:443"
    environment:
      ENV: ${ENV:-development}
      ASSET_BUCKET: ${ASSET_BUCKET}
      ASSET_DOMAIN: ${ASSET_DOMAIN}
      ASSET_TEMP_BUCKET: ${ASSET_TEMP_BUCKET}
      ASSET_TEMP_DOMAIN: ${ASSET_TEMP_DOMAIN}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CHROMA_URL: http://chroma:9000
      OLLAMA_API_URL: ${OLLAMA_API_URL}
      OLLAMA_API_KEY: ${OLLAMA_API_KEY}
      HF_HOME: /app/huggingface
      SENTRY_DSN: ${SENTRY_DSN}
      RUNPOD_API_KEY: ${RUNPOD_API_KEY}
      MODELS_ENDPOINT_ID: ${MODELS_ENDPOINT_ID}
      WORKFLOW_ENDPOINT_ID: ${WORKFLOW_ENDPOINT_ID}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  memcached:
    image: memcached:bookworm
    restart: unless-stopped
  chroma:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ${CHROMA_PATH:-./chroma-data}:/chroma-data
    command:
      [
        "chroma",
        "run",
        "--host",
        "0.0.0.0",
        "--port",
        "9000",
        "--path",
        "/chroma-data",
      ]
    expose:
      - "9000"
  postgres:
    image: postgres:16.3
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_DATA_DIR:-./postgres-data}:/var/lib/postgresql/data
  ollama:
    image: georgi/ollama-bearer-auth
    restart: unless-stopped
    volumes:
      - ${OLLAMA_PATH:-./ollama-data}:/root/.ollama
    expose:
      - "8081"
    ports:
      - "8081:8081"
    environment:
      OLLAMA_API_KEY: ${OLLAMA_API_KEY}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # minio:
  #   container_name: minio
  #   image: minio/minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - type: bind
  #       source: minio
  #       target: /data
  #   environment:
  #     MINIO_ROOT_USER: minio
  #     MINIO_ROOT_PASSWORD: minio123
  #     MINIO_VOLUMES: /data
  #   command: server --console-address ":9001"
